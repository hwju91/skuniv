/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2016-09-10 05:27:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class footer_005ftodo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1469857023168L));
    _jspx_dependants.put("jar:file:/C:/bit/work/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/0903.2/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- CONTENT-WRAPPER SECTION END-->\r\n");
      out.write("<footer>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t&copy; 2015 YourCompany | By : <a\r\n");
      out.write("\t\t\t\t\thref=\"http://www.designbootstrap.com/\" target=\"_blank\">DesignBootstrap</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</footer>\r\n");
      out.write("<!-- script -->\r\n");
      out.write("<script src=\"js/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("<script src=\"js/interface.js\"></script>\r\n");
      out.write("<script src=\"js/config.js\"></script>\r\n");
      out.write("<script src=\"js/jquery.flot.min.js\"></script>\r\n");
      out.write("<script src=\"js/jquery.flot.pie.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tvar data = [], totalPoints = 100;\r\n");
      out.write("\r\n");
      out.write("    function getRandomData() {\r\n");
      out.write("\r\n");
      out.write("      if (data.length > 0)\r\n");
      out.write("        data = data.slice(1);\r\n");
      out.write("\r\n");
      out.write("      // Do a random walk\r\n");
      out.write("      while (data.length < totalPoints) {\r\n");
      out.write("\r\n");
      out.write("        var prev = data.length > 0 ? data[data.length - 1] : 50,\r\n");
      out.write("            y = prev + Math.random() * 10 - 5;\r\n");
      out.write("\r\n");
      out.write("        if (y < 0) {\r\n");
      out.write("          y = 0;\r\n");
      out.write("        } else if (y > 100) {\r\n");
      out.write("          y = 100;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        data.push(y);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      // Zip the generated y values with the x values\r\n");
      out.write("      var res = [];\r\n");
      out.write("      for (var i = 0; i < data.length; ++i) {\r\n");
      out.write("        res.push([i, data[i]]);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      return res;\r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("    var temp=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${per}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\tvar donutData = [\r\n");
      out.write("{\r\n");
      out.write("\t\r\n");
      out.write("\tlabel : \"to do\",\r\n");
      out.write("\tdata : 100-temp,\r\n");
      out.write("\tcolor : \"#d2d6de\"\r\n");
      out.write("}, {\r\n");
      out.write("\tlabel : \"done\",\r\n");
      out.write("\tdata : temp,\r\n");
      out.write("\tcolor : \"#0073b7\"\r\n");
      out.write("}\r\n");
      out.write("];\r\n");
      out.write("\t$.plot(\"#donut-chart\", donutData, {\r\n");
      out.write("\t\tseries : {\r\n");
      out.write("\t\t\tpie : {\r\n");
      out.write("\t\t\t\tshow : true,\r\n");
      out.write("\t\t\t\tradius : 1,\r\n");
      out.write("\t\t\t\tinnerRadius : 0.4,\r\n");
      out.write("\t\t\t\tlabel : {\r\n");
      out.write("\t\t\t\t\tshow : true,\r\n");
      out.write("\t\t\t\t\tradius : 2 / 3,\r\n");
      out.write("\t\t\t\t\tformatter : labelFormatter,\r\n");
      out.write("\t\t\t\t\tthreshold : 0.1\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tlegend : {\r\n");
      out.write("\t\t\tshow : false\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write("* Custom Label formatter\r\n");
      out.write("* ----------------------\r\n");
      out.write("*/\r\n");
      out.write("function labelFormatter(label, series) {\r\n");
      out.write("return '<div style=\"font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;\">'\r\n");
      out.write("    + label\r\n");
      out.write("    + \"<br>\"\r\n");
      out.write("    +\"</div>\";\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function drag(target, e) {\t\t//드래그 시작시 호출 할 함수\r\n");
      out.write("\te.dataTransfer.setData('Text', target.id);\r\n");
      out.write("};\r\n");
      out.write("function drop(target, e) {\t\t//드롭시 호출 할 함수\r\n");
      out.write("\tvar id = e.dataTransfer.getData('Text');\r\n");
      out.write("\ttarget.appendChild(document.getElementById(id));\r\n");
      out.write("\te.preventDefault();\t\r\n");
      out.write("};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
